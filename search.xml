<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>链表</title>
      <link href="/2022/12/09/%E9%93%BE%E8%A1%A8/"/>
      <url>/2022/12/09/%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h1><h3 id="单链表"><a href="#单链表" class="headerlink" title="单链表"></a>单链表</h3><p>① 链表的销毁  头结点和头指针都销毁</p><p>头结点要销毁,   ∴ p  &#x3D; L</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Status Delete_List(List L)</span><br></pre></td></tr></table></figure><p>② 链表的清空  头结点和头指针仍然存在</p><p>依次释放所有结点， 并将头结点的指针域设置为空， 头结点不销毁，所以 p &#x3D; L -&gt; next &#x2F;&#x2F; 指向首元结点</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Status <span class="title">ClearList</span><span class="params">(LinkList &amp;L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Lnode *q, *p; <span class="comment">// 或者 LinkList p, q;</span></span><br><span class="line">p = L -&gt; next;</span><br><span class="line"><span class="keyword">while</span>(p)</span><br><span class="line">&#123;</span><br><span class="line">q = p -&gt; next;</span><br><span class="line"><span class="keyword">delete</span> p;</span><br><span class="line">p = q;</span><br><span class="line">&#125;</span><br><span class="line">L -&gt; next = <span class="literal">NULL</span>; <span class="comment">// 头结点设成空</span></span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>③ 求链表的表长</p><p> 从首元结点开始</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">ListLength</span><span class="params">(LinkList  L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LinkList p;</span><br><span class="line">p = L-&gt;next;</span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(p)</span><br><span class="line">&#123;</span><br><span class="line">cnt ++;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>④ 取值</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Status <span class="title">GetElem_L</span><span class="params">(LinkList L,<span class="type">int</span> i, ElemType &amp;e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p = p-&gt;next;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(p &amp;&amp; j &lt; i)</span><br><span class="line">    &#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        j ++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!p || j &gt; i) <span class="keyword">return</span> ERROR; <span class="comment">// 第 i 个元素不存在, i取值不合法</span></span><br><span class="line">    e = p-&gt;data;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>⑤ 查找</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Lnode *<span class="title">LocateElem_L</span><span class="params">(LinkList L, Elemtype e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 找到返回 L 中值为 e 的地址，查找失败则返回 NULL</span></span><br><span class="line">    p = p-&gt;next; <span class="comment">// 首元结点</span></span><br><span class="line">    <span class="keyword">while</span>(p &amp;&amp; p-&gt;data != e)</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    <span class="keyword">return</span> p;     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">LocateElem_L</span><span class="params">(LinkList L, Elemtype e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p = L-&gt;next;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(p &amp;&amp; p-&gt;data != e)</span><br><span class="line">    &#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        j ++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(p) <span class="keyword">return</span> j;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>⑥ 插入操作</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Status <span class="title">ListInsert_L</span><span class="params">(LinkList &amp;L, <span class="type">int</span> i, ElemType e)</span> <span class="comment">// 在第 i 个元素之前插入数据 e</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LinkList p;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">    p = L;<span class="comment">// 从头结点开始</span></span><br><span class="line">    <span class="keyword">while</span>(p &amp;&amp; j &lt; i<span class="number">-1</span>) <span class="comment">// p 不能是空</span></span><br><span class="line">    &#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        j ++;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">if</span>(!p || j &gt; i - <span class="number">1</span>) <span class="keyword">return</span> ERROR;</span><br><span class="line">    LinkList s;</span><br><span class="line">    s = <span class="keyword">new</span> LNode;</span><br><span class="line">    s-&gt;data = e;</span><br><span class="line">    s-&gt;next = p-&gt;next;</span><br><span class="line">    p-&gt;next = s;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>⑦ 删除操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Status ListDelete_L(LinkList &amp;L, int i, ElemType &amp;e) </span><br><span class="line">// 将线性表第 i 个数据元素删除是删除 i - 1位置的元素，所以应该找到i-1的位置</span><br><span class="line">&#123;</span><br><span class="line">LinkList p = L;</span><br><span class="line">int j = 0;</span><br><span class="line">while(p-&gt;next &amp;&amp; j &lt; i-1 )</span><br><span class="line">&#123;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">j ++;</span><br><span class="line">&#125; // 找到i-1的位置</span><br><span class="line">if(!(p-&gt;next) || j &gt; i-1 ) return ERROR;</span><br><span class="line">LinkList q = p-&gt;next;</span><br><span class="line">e = q-&gt;next;</span><br><span class="line">p-&gt;next = q-&gt;next;</span><br><span class="line">delete q;</span><br><span class="line">return OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>⑧ 头插法建立单链表</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CreateList_H</span><span class="params">(LinkList &amp;L, <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L = <span class="keyword">new</span> LNode;</span><br><span class="line">    L-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = n; i &gt; <span class="number">0</span>; i --)</span><br><span class="line">    &#123;</span><br><span class="line">        LinkList p = <span class="keyword">new</span> LNode;</span><br><span class="line">        cin &gt;&gt; p-&gt;data;</span><br><span class="line">        p-next = L-&gt;next;</span><br><span class="line">        L-next = p;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>⑨ 尾插法建立单链表</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CreateList_R</span><span class="params">(LinkList &amp;L, <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L = <span class="keyword">new</span> LNode;</span><br><span class="line">    L-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    LinkList r = L;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        LinkList p = <span class="keyword">new</span> LNode;</span><br><span class="line">        cin &gt;&gt; p-&gt;data;</span><br><span class="line">        r-&gt;next = p; <span class="comment">// 插入到尾部后面</span></span><br><span class="line">        p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        r = p; <span class="comment">// r 指向新的尾结点</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="循环链表"><a href="#循环链表" class="headerlink" title="循环链表"></a>循环链表</h3><p>循环链表：是一种头尾相接的链表（最后一个结点的指针域指向头结点）</p><p>优点：从表中任一结点出发均可找到表中其他结点</p><p>头指针表示单循环链表：找第一个结点的O(1)查找，找第n个结点O(n)</p><p>尾指针表示单循环链表：找第一个结点（R-&gt;next-&gt;next) O(1)查找</p><p>找第n个结点也就是最后一个结点O(1)</p><p>综上考虑，循环链表一般用尾指针来表示循环单链表</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LinkList <span class="title">Connect</span><span class="params">(LinkList Ta, LinkList Tb)</span> <span class="comment">// Ta 与 Tb 合并</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LinkList p = Ta-&gt;next;</span><br><span class="line">    Ta-&gt;next = Tb-&gt;next-&gt;next;</span><br><span class="line">    <span class="keyword">delete</span> Tb-&gt;next;</span><br><span class="line">    Tb-&gt;next = p;</span><br><span class="line">    <span class="keyword">return</span> Tb;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2ae36519d0d34fd6a5a768581327634e.png"></p><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="双向链表"><a href="#双向链表" class="headerlink" title="双向链表"></a>双向链表</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>wyb</title>
      <link href="/2022/11/30/wyb/"/>
      <url>/2022/11/30/wyb/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>寒假计划</title>
      <link href="/2022/11/28/%E5%AF%92%E5%81%87%E8%AE%A1%E5%88%92/"/>
      <url>/2022/11/28/%E5%AF%92%E5%81%87%E8%AE%A1%E5%88%92/</url>
      
        <content type="html"><![CDATA[<h5 id="1-数据结构从头到尾学习一遍，手敲完整代码"><a href="#1-数据结构从头到尾学习一遍，手敲完整代码" class="headerlink" title="1. 数据结构从头到尾学习一遍，手敲完整代码"></a>1. 数据结构从头到尾学习一遍，手敲完整代码</h5><h5 id="2-算法基础课学习完毕-acwing，毕竟花钱了，还要准备蓝桥杯，不能白买-qwq"><a href="#2-算法基础课学习完毕-acwing，毕竟花钱了，还要准备蓝桥杯，不能白买-qwq" class="headerlink" title="2. 算法基础课学习完毕 acwing，毕竟花钱了，还要准备蓝桥杯，不能白买(qwq)"></a>2. 算法基础课学习完毕 acwing，毕竟花钱了，还要准备蓝桥杯，不能白买(qwq)</h5><h5 id="3-C-Primer-Plus-看一遍"><a href="#3-C-Primer-Plus-看一遍" class="headerlink" title="3. C ++ Primer Plus 看一遍"></a>3. C ++ Primer Plus 看一遍</h5><h5 id="4-好的情况下把计算机网络也大致了解一下"><a href="#4-好的情况下把计算机网络也大致了解一下" class="headerlink" title="4. 好的情况下把计算机网络也大致了解一下"></a>4. 好的情况下把计算机网络也大致了解一下</h5><h5 id="5-注意刷些算法题，力扣题，每天最少三道"><a href="#5-注意刷些算法题，力扣题，每天最少三道" class="headerlink" title="5. 注意刷些算法题，力扣题，每天最少三道"></a>5. 注意刷些算法题，力扣题，每天最少三道</h5><h5 id="6-准备英语四级考试，背单词，准备听力，背模板"><a href="#6-准备英语四级考试，背单词，准备听力，背模板" class="headerlink" title="6. 准备英语四级考试，背单词，准备听力，背模板"></a>6. 准备英语四级考试，背单词，准备听力，背模板</h5>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
